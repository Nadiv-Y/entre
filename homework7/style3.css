body {
    margin: 0;
    padding: 20px;
    font-family: sans-serif;
    background-color: #f0f0f0;
    display: flex;
    justify-content: center; /* Центрируем галерею по горизонтали */
    align-items: center; /* Центрируем галерею по вертикали */
    min-height: 100vh;
    box-sizing: border-box;
}

.gallery-grid {
    display: grid; /* Делаем контейнер сеткой CSS Grid */
    /* === ИЗМЕНЕНИЕ 1: Основной макет 3x3 колонки === */
    grid-template-columns: repeat(3, 1fr); /* Создаем 3 равные колонки */
    gap: 10px; /* Отступы между изображениями */
    /* === ИЗМЕНЕНИЕ 2: Задаем максимальную ширину контейнера, чтобы он не был слишком большим на широких экранах === */
    min-width: 1024px; /* Максимальная ширина всей сетки */
    width: 100%; /* Гарантируем, что сетка займет всю доступную ширину до max-width */
    padding: 10px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.gallery-grid img {
    width: 100%; /* Изображение занимает всю ширину своей ячейки */
    /* === ИЗМЕНЕНИЕ 3: Высота теперь будет зависеть от ширины ячейки для сохранения пропорций === */
    /* Чтобы сохранить пропорции, но заполнить ячейку, мы задаем height: 100%
       и object-fit: cover, но для этого нужно, чтобы родительская ячейка имела фиксированную высоту,
       либо чтобы изображения сами определяли высоту по пропорциям.
       Для 3x3 сетки с одинаковыми изображениями обычно используют Aspect Ratio Box
       или просто фиксированную высоту и object-fit.
       Лучше оставить фиксированную высоту, чтобы все изображения были одинаковыми квадратами/прямоугольниками.
    */
    height: 250px; /* Фиксированная высота для всех изображений (достаточно для 3х3) */
    object-fit: cover; /* Изображение масштабируется, чтобы заполнить ячейку, обрезая лишнее */
    border-radius: 4px;
}


/* Адаптивность: Для экранов до 1024px, если это необходимо.
   Т.к. на картинке 3x3 на десктопе, мы будем уменьшать колонки на меньших экранах.
*/


/* ИЗМЕНЕНИЕ 4: Медиа-запрос для экранов до 900px - 2 колонки  */
@media (max-width: 900px) {
    .gallery-grid {
        grid-template-columns: repeat(2, 1fr); /* 2 колонки */
        max-width: 600px; /* Уменьшаем максимальную ширину для 2х колонок */
    }
    .gallery-grid img {
        height: 200px; /* Уменьшаем высоту изображений для 2х колонок */
    }
}

/* === ИЗМЕНЕНИЕ 5: Медиа-запрос для экранов до 600px (мобильные) - 1 колонка === */
@media (max-width: 600px) {
    .gallery-grid {
        grid-template-columns: 1fr; /* 1 колонка */
        max-width: 300px; /* Максимальная ширина для 1 колонки */
    }
    .gallery-grid img {
        height: 180px; /* Уменьшаем высоту изображений для 1 колонки */
    }
}