שיעורי בית – רוסלן וולבץ (ת.ז. 341137263)
תרגיל בית 1 – מבוא להכרת אינטרנט


1.הגדר אינטרנט.

האינטרנט היא רשת מחשבים עולמית המחברת בין מיליוני מחשבים והתקנים אחרים ברחבי העולם.

האינטרנט משתמש בקבוצה של פרוטוקולים סטנדרטיים, כגון TCP/IP א) (פרוטוקול בקרת שידור/פרוטוקול אינטרנט), כדי להעביר נתונים בין מכשירים.
פרוטוקולים אלו מספקים יכולת פעולה הדדית ומאפשרים למכשירים מסוגים שונים לתקשר זה עם זה.

ב) האינטרנט נשען על תשתית מורכבת הכוללת: כבלים (סיבים אופטיים, נחושת)
נתבים.
שרתים.
חיבורי לווין.
רשתות אלחוטיות (Wi-Fi, רשתות סלולריות).



  www 2.מה הוא 
WWW (World Wide Web) היא מערכת מידע גלובלית המבוססת על היפרטקסט המאפשרת למשתמשים לגשת למסמכים ולמשאבי אינטרנט אחרים דרך האינטרנט.



3. הגדר צד שרת וצד לקוח.
שרת הוא מחשב או תוכנה עוצמתיים המנהלים מסד נתונים.
לקוח הוא יישום או מכשיר המקיים אינטראקציה עם המשתמש.
שני צדדים מקושרים עם המסד הנתונים.

צד השרת יכול לקבל , לשנות או לקרוא נתונים במסד הנתונים.
בנוסף , השרת מאחסן את מסד הנתונים ומעבד בקשות מלקוחות.

צד הלקוח בדרך כלל לא מאחסן את מסד הנתונים עצמו. במקום זאת, הוא שולח בקשות לשרת כדי לאחזר או לשנות נתונים



4.הגדר פרוטוקול
פרוטוקול הוא קבוצה של כללים או הסכמים המגדירים כיצד רכיבים של מערכת (כגון יישומים או התקנים) צריכים לקיים אינטראקציה זה עם זה.
למשלת. .
פרוטוקולי רשת הם הכללים המגדירים כיצד מכשירים מתקשרים ברשת. דוגמאות: HTTP (עבור דפי אינטרנט), FTP (עבור העברת קבצים), TCP/IP (פרוטוקול האינטרנט הבסיסי).



5. HTTP (Hypertext Transfer Protocol) הוא פרוטוקול העברת היפרטקסט המשמש להעברת נתונים בין לקוח (בדרך כלל דפדפן אינטרנט) לשרת דרך האינטרנט
.
שיטות HTTP: השיטות העיקריות בשימוש ב-HTTP הן:

GET - לקבלת נתונים מהשרת.

POST - לשליחת נתונים לשרת (לדוגמה, בעת שליחת טופס).

PUT - לעדכון נתונים בשרת.

DELETE - למחיקת נתונים מהשרת.



6.בheader יכולים להיות דברים הבאים:
בחדר יכולים להיות:
לוגו: סמל מותג ייחודי המזהה אתר אינטרנט.
תפריט ניווט: רשימת קישורים המאפשרת למשתמשים לנווט בין דפים שונים של אתר אינטרנט.


7.פרוטוקול HTTP (Hypertext Transfer Protocol) הוא הבסיס לתקשורת נתונים באינטרנט.
ישנן מספר מתודות (פעולות) המשמשות לתקשורת בין לקוח (למשל, דפדפן) לשרת. שתי המתודות המרכזיות ביותר הן:

GET:
מתודה זו משמשת לאחזור מידע מהשרת.
היא מתאימה כאשר הלקוח רוצה לקרוא נתונים בלבד, ללא שינוי או השפעה על השרת.
לדוגמה, כאשר דפדפן טוען דף אינטרנט, הוא משתמש במתודת GET כדי לקבל את קוד ה-HTML, תמונות וקבצים אחרים מהשרת.
מאחר וזה רק קורא מידע לא אמורים להיות פה שינויים בשרת.

POST:
מתודה זו משמשת לשליחת נתונים לשרת.
היא מתאימה כאשר הלקוח רוצה לשנות או ליצור נתונים בשרת.
לדוגמה, כאשר משתמש ממלא טופס באתר (כמו טופס יצירת חשבון או טופס יצירת פוסט), הדפדפן משתמש במתודת POST כדי לשלוח את הנתונים לשרת.
מתודה זו גם משמשת בדרך כלל כאשר מבצעים פעולות של יצירה (create) או עדכון (update) של מידע בשרת.
ההבדל העיקרי בין GET ל-POST הוא ש-GET משמשת לקריאת נתונים, בעוד ש-POST משמשת לשליחת נתונים. הבדל זה משפיע על אופן השימוש בכל מתודה ועל ההשפעה שלה על השרת.


8. בבקשת HTTP (HTTP request), נתונים יכולים להישלח בפורמטים שונים. שני הפורמטים המרכזיים הם:

בשאילתת HTTP (HTTP request), הנתונים יכולים להישלח בכמה פורמטים. שני הפורמטים המרכזיים הם:

Form Data (application/x-www-form-urlencoded): נתונים נשלחים כזוגות של מפתח-ערך, כאשר כל זוג מופרד על ידי "&" והערכים מוצפנים כך שיתאימו לפורמט של כתובת URL.

JSON (application/json): נתונים נשלחים בפורמט של אובייקט JSON, שהוא פורמט קריא ואנושי שקל לעיבוד ומכיל נתונים בצורה היררכית.

9. איזה תוכמה יודעת לשלוח http request?

דפדפן יודע לשלוח http request.

לדוגמא - Google Chrome


10.גוף הבקשה (request body) ב־HTTP יכול להיות מורכב מסוגים שונים של נתונים – כמו טקסט פשוט, JSON, טופס בפורמט של זוגות מפתח-ערך (כמו בטפסים באתרים), קבצים ועוד – תלוי איך השרת מצפה לקבל את המידע.



11.מהו http response status?

זה התשובה שנשלחת על ידי שרת ללקוח עם התשובה איך הבקשה טופלה.

כגון:

200 OK - הבקשה טופלה
404 Not Found - הדף אינטרנט לא נמצא ( לא קיים)




12.הסבר מבנה של ה-URL.

URL בנוי מכמה חלקים:

למשל נקח לינק הבא:

https://www.gov.il/he/service/itc135

https - פרוטוקול מוגן שעל ידו אנחנו יוצרים קשר עם האתר הנדרש

www.gov.il/ - זוהי הכתובת הראשית של האתר אליו נשלחת הבקשה.

/he/service/itc135 - זה הנתיב לעמוד ספציפי באתר.



13.ממה מורכבים IPv4 & IPv6?

 IPv4
לדוגמה: 192.168.0.1

א) 4 מספרים מופרדים בנקודות (כל מספר בין 0 ל־255)

ב) באורך של 32 ביט

ג) פורמט ותיק ומוכר

ד) קיימים כ־4.3 מיליארד כתובות


🔹 IPv6
לדוגמה: 2001:0db8:85a3:0000:0000:8a2e:0370:7334

א) 8 קבוצות מופרדות בנקודתיים

ב) 128 ביט, עם ספרות הקסדצימליות (0–9, a–f)

ג) הרבה יותר כתובות – מספיק לכולם

ד) אפשר לקצר אפסים: 2001:db8::8a2e:370:7334


14. שרתי DNS (מערכת שמות דומיינים) הם שרתים שאחראיים להמיר שמות דומיינים (למשל, google.com) לכתובות IP (למשל, 216.58.217.46), שנדרשות למחשבים כדי להתחבר אחד לשני ברשת.



15.להפוף מספר בינארי 101 לדצימלי:

 1 × 2² + 0 × 2¹ + 1 × 2⁰ = 4 + 0 + 1 = 5


16. חפש ברחבי הרשת http request .
האם ניתן לשלוח נתונים שלא ה-body?

כן, זה אפשרי
GET: ב-GET הנתונים שנשלחים (כמו שם משתמש או גיל) מוצגים בכתובת ה-URL של הדף. למשל, אם אתה שולח את הנתונים username=John ו-age=30, הכתובת תהיה משהו כזה:

http://www.google.com/page?username=John&age=30





17.מהו element במבנה xml?

ב-XML, אלמנט (או תג) הוא יחידת בנייה עיקרית של המסמך. אלמנטים משמשים לייצוג נתונים ומבנה הנתונים במסמך XML.

האלמנטים ב-XML מורכבים מ:

תג פותח (למשל, <surname>)

תוכן (נתונים או אלמנטים אחרים)

תג סוגר (למשל, </surname>)





18.מהו content במבנה xml?


במבנה XML, ה-content (תוכן) של אלמנט מתייחס לנתונים או למידע שנמצא בתוך האלמנט, בין התג הפותח לתג הסוגר. התוכן יכול להיות טקסט, אלמנטים אחרים (תתי-אלמנטים), או שילוב של שניהם.

למשל - <name>John</name>

כאן התוכן של אלמנט "name" - מילה "John"


19.מהו atribute במבנה xml?

ב-XML, אתריבוט הוא מידע נוסף שנוסף לאלמנט. האתרים מצוינים בתוך תג הפתיחה של האלמנט ותמיד כוללים זוג "שם-ערך".


<person age="30" gender="male">
  <name>John</name>
</person>


כאן:
- `age="30" — אתריבוט בשם age וערך `30`.
-gender="male" — אתריבוט בשם gender וערך `male.



20.מהו מבנה property בJson?

במבנה JSON, property (או סproperty) הוא זוג "מפתח-ערך". המפתח הוא מיתר שמזהה את ה-property, והערך יכול להיות כל סוג נתון: מיתר, מספר, ערך בוליאני, מערך או אפילו אובייקט אחר.

דוגמה:
{
  "name": "John",
  "age": 30,
  "isStudent": false
}

"name" הוא המפתח, ו-"John" הוא הערך של ה-property הזה.

"age" הוא המפתח, ו-30 הוא הערך.

"isStudent" הוא המפתח, ו-false הוא הערך.





21.מהו מבנע בערך בjson?



Програма ChatGPT сказала:
מבנה מערך ב-JSON הוא רשימה ממוינת של ערכים, שתמיד נמצאת בין סוגריים מרובעים []. הערכים יכולים להיות מסוגים שונים: מיתרים, מספרים, אובייקטים, ערכים בוליאניים או אפילו מערכים אחרים.

דוגמא:

["apple", "banana", "cherry"]

כאן:

"apple", "banana", ו-"cherry" הם האלמנטים של המערך, והם מסודרים בסדר מסוים.

המערך יכול לכלול כל סוג נתון, וניתן לשלב בין סוגים שונים:


22. לקודד פקולטה שמורכבת משני קורסים . שני מרצים וארבע טודנטים כולל תכונות ( attributes) , במבנה xml וjson


xml:
<faculty name="Programming">
  <course id="CS01" name="FullStack JohnBryce">
    <lecturer name="Yossi Arye" email="yossi@university.com" />
    <lecturer name="Avishay Cohen" email="avishay@university.com" />
    <student name="Ruslan Volvach" age="25" email="volwach@gmail.com" />
    <student name="Israel Israeli" age="24" email="israel@university.com" />
  </course>
  
  <course id="CS02" name="Cyber">
    <lecturer name="John Bryce" email="johnb@university.com" />
    <lecturer name="Bill Gates" email="billg@university.com" />
    <student name="Itay Raviv" age="23" email="itay@university.com" />
    <student name="Emily Tomsinsky" age="20" email="emily@university.com" />
  </course>
</faculty>



json:

{
  "faculty": {
    "name": Programming",
    "courses": [
      {
        "id": "CS01",
        "name": "FullStack JohnBryce",
        "lecturers": [
          {
            "name": "Yossi Arye",
            "email": "yossi@university.com"
          },
          {
            "name": "Avishay Cohen",
            "email": "avishay@university.com"
          }
        ],
        "students": [
          {
            "name": "Ruslan Volvach",
            "age": 25,
            "email": "volwach@gmail.com"
          },
          {
            "name": "Israel  Israeli",
            "age": 24,
            "email": "israel@university.com"
          }
        ]
      },
      {
        "id": "CS02",
        "name": "Data Structures",
        "lecturers": [
          {
            "name": "John Bryce",
            "email": "johnb@university.com"
          },
          {
            "name": "Bill Gates",
            "email": "billb@university.com"
          }
        ],
        "students": [
          {
            "name": "Itay Raviv",
            "age": 23,
            "email": "mike@university.com"
          },
          {
            "name": "Emily Tomsinsky",
            "age": 20,
            "email": "emily@university.com"
          }
        ]
      }
    ]
  }
}
